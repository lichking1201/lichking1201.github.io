<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Dragoon</title>
        <description>Dragoon - lichen</description>
        <link></link>
        <link></link>
<<<<<<< HEAD
        <lastBuildDate>2014-02-13T10:24:17+08:00</lastBuildDate>
        <pubDate>2014-02-13T10:24:17+08:00</pubDate>
        <ttl>1800</ttl>


=======
        <lastBuildDate>2014-02-12T17:37:10+08:00</lastBuildDate>
        <pubDate>2014-02-12T17:37:10+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>使用 PNG 图片制作动态 Loading</title>
                <description>&lt;p&gt;曾经遇到过在一个 GIF 图片里面制作一个半透明的 Loading，无论怎么折腾，总有锯齿，非常不好处理。最后无奈地使用了非半透明的“菊花”，视觉有所降级。&lt;/p&gt;

&lt;p&gt;其实如果不兼容 IE 的话，还是可以使用 CSS3 + PNG 图片完成这个动态的 GIF Loading 的。具体效果见 &lt;a href=&quot;http://pizn.github.io/demo/loading.html&quot; target=&quot;_blank&quot; title=&quot;demo&quot;&gt;DEMO&lt;/a&gt;。&lt;/p&gt;

&lt;p&gt;实现的方法和代码如下：&lt;/p&gt;

&lt;pre name=&quot;colorcode&quot; class=&quot;css&quot;&gt;
#loading {
     width: 36px;
     height: 36px;
     position: absolute;
     top: 50%;
     left: 50%;
     margin: -18px 0 0 -18px;
     text-indent: -9999em;
     overflow: hidden;
     /** loading 图片地址 **/
     background: url(loading.png) no-repeat 0 0;
     /** webkit **/
     -webkit-animation-name: loadRotate;
     -webkit-animation-duration: 1s;
     -webkit-animation-iteration-count: infinite;
     -webkit-animation-timing-function: linear;
     /** firefox **/ 
     -moz-animation-name: loadRotate;
     -moz-animation-duration: 1s;
     -moz-animation-iteration-count: infinite;
     -moz-animation-timing-function: linear;
     /** w3c **/
     animation-name: loadRotate;
     animation-duration: 1s;
     animation-iteration-count: infinite;
     animation-timing-function: linear;
 }
 /** webkit **/
 @-webkit-keyframes loadRotate {
     from {
         -webkit-transform:rotate(0deg);
     }
     25% {

     }
     to {
         -webkit-transform:rotate(360deg);
     }
 }
 /** firefox **/
 @-moz-keyframes loadRotate {
     from {
         -moz-transform:rotate(0deg);
     }
     to {
         -moz-transform:rotate(360deg);
     }

 }
 /** w3c **/
 @keyframes loadRotate {
     form {
         transform: rotate(0deg);
     }
     to {
         transform: rotate(360deg);
     }
 }
&lt;/pre&gt;


&lt;p&gt;HTML 代码如下：&lt;/p&gt;

&lt;pre class=&quot;html&quot; name=&quot;colorcode&quot;&gt;
&amp;lt;p id=&quot;loading&quot;&amp;gt;Loading&amp;lt;/p&amp;gt;
&lt;/pre&gt;


&lt;p&gt;恩，这样就 OK 了。&lt;/p&gt;

&lt;p&gt;后话：Loading 的“菊花”样式，有一个 JS 可以实现，就是 &lt;a href=&quot;http://fgnass.github.com/spin.js/&quot; title=&quot;spin.js&quot; target=&quot;_blank&quot;&gt;spin.js&lt;/a&gt;，也能兼容 IE 。但其兼容 IE 的方式是使用滤镜，对性能有所影响。&lt;/p&gt;
</description>
                <link>/2012/10/26/PNG-Loading.html</link>
                <guid>/2012/10/26/PNG-Loading</guid>
                <pubDate>2012-10-26T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>几个 IE 样式解决方案</title>
                <description>&lt;p&gt;这篇文章将会记录一些 IE 兼容性的解决方案。忙碌的时候，做个笔记。稍空的时候，记录下来。随着学习经验的积累，这就是财富。&lt;/p&gt;

&lt;h3&gt;一，IE 背景穿透解决方案（空路径)&lt;/h3&gt;

&lt;p&gt;有时候，为了给页面的某一个元素设置一个空的背景，那么不去设置&lt;code class=&quot;v-code&quot;&gt;background&lt;/code&gt;属性，恰巧这个元素有交互效果，要么是&lt;code class=&quot;v-code&quot;&gt;mouseover&lt;/code&gt;， 要么是&lt;code class=&quot;v-code&quot;&gt;mouseout&lt;/code&gt;。而在 IE 下，会导致该元素没有出发交互动作。或者说是穿透到了下一个元素中去。&lt;/p&gt;

&lt;p&gt;这样的案例，经常发生在一些有小三角型的&lt;strong&gt;tips&lt;/strong&gt;里面。于是，我通常的解决方法如下：&lt;/p&gt;

&lt;pre class=&quot;css&quot; name=&quot;colorcode&quot;&gt;
.sl-through {
    *background: url(about:blank);          /* for IE 6-7 */
    background: url(about:blank)\0;         /* for IE 8 */
}
:root .sl-through background:rgba(0,0,0,0); /* for IE 9 */
&lt;/pre&gt;


&lt;h3&gt;二，Iframe 背景半透明解决方法&lt;/h3&gt;

&lt;p&gt;先说一下透明的通用解决方法，例如使用&lt;code class=&quot;v-code&quot;&gt;Opacity&lt;/code&gt;来为一个&lt;code class=&quot;v-code&quot;&gt;div&lt;/code&gt;层做半透明，其实不是很建议，因为这个元素的子元素会继承半透明的属性。解决了半透明问题，结果又得处理文字上的不透明问题。&lt;/p&gt;

&lt;p&gt;通常的解决方法是通过&lt;code class=&quot;v-code&quot;&gt;ruba&lt;/code&gt;(高级浏览器)和&lt;code class=&quot;v-code&quot;&gt;渐变滤镜&lt;/code&gt;(IE浏览器)做一个层的透明解决方案：&lt;/p&gt;

&lt;pre class=&quot;css&quot; name=&quot;colorcode&quot;&gt;
/*
 * filter 中的 StartColorStr 和 EndColorStr:
 *    #4c000000 是 30% 透明度的 #000000 的意思
 *    组成: # + 透明度 + 颜色
 *    算法: Math.floor(0.6 * 255).toString(16);
 */
.sl-rgba{
    background:rgba(0, 0, 0, 0.3);  /* 支持高级浏览器 */
    filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=0, StartColorStr=&#39;#4c000000&#39;, EndColorStr=&#39;#4c000000&#39;); /* for IE */
}
:root .rgba{
    filter:progid:DXImageTransform.Microsoft.Gradient(GradientType=0, StartColorStr=&#39;#00000000&#39;, EndColorStr=&#39;#00000000&#39;); /* for IE9 */ 
}
&lt;/pre&gt;


&lt;p&gt;以上解决的只是一个页面里面的半透明解决方案，解下来说为一个页面里的&lt;strong&gt;Iframe&lt;/strong&gt;做半透明。&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Iframe&lt;/strong&gt;里面的样式控制：&lt;/p&gt;

&lt;pre class=&quot;css&quot; name=&quot;colorcode&quot;&gt;
html, body { background: none; }
&lt;/pre&gt;


&lt;p&gt;父页面的&lt;strong&gt;Iframe&lt;/strong&gt;需要添加一个属性：&lt;code class=&quot;v-code&quot;&gt;allowTransparency=&#39;true&#39;&lt;/code&gt;，这样就可以解决&lt;strong&gt;iframe&lt;/strong&gt;的半透明问题。&lt;/p&gt;

&lt;h3&gt;三，IE8 下使用滤镜效果与 a 标签兼容问题&lt;/h3&gt;

&lt;p&gt;如上文的半透明解决方案，使用了&lt;strong&gt;IE&lt;/strong&gt;的滤镜来解决半透明问题。但&lt;strong&gt;IE&lt;/strong&gt;滤镜的使用，在&lt;strong&gt;IE8&lt;/strong&gt;下，有时候会导致子元素里面的 &lt;strong&gt;a&lt;/strong&gt; 标签链接没有&lt;code class=&quot;v-code&quot;&gt;a:hover&lt;/code&gt;效果。&lt;/p&gt;

&lt;p&gt;举个例子，为一个&lt;code class=&quot;v-code&quot;&gt;div&lt;/code&gt;层做个阴影，使用了滤镜。那么，需要对&lt;strong&gt;a&lt;/strong&gt;标签增加一个属性&lt;code class=&quot;v-code&quot;&gt;position: relative&lt;/code&gt;。&lt;/p&gt;

&lt;h3&gt;四，投影问题&lt;/h3&gt;

&lt;p&gt;在 &lt;a href=&quot;http://www.aliceui.com&quot; target=&quot;_blank&quot; title=&quot;aliceui&quot;&gt;Aliceui&lt;/a&gt; 中，我们罗列出了一些解决方案，例如跨浏览器背景阴影，就很好地解决了阴影问题。现更新如下：&lt;/p&gt;

&lt;pre class=&quot;css&quot; name=&quot;colorcode&quot;&gt;
.sl-shadow {
    /* modern web browsers */
    -moz-box-shadow:1px 3px 12px #bbb;
    -webkit-box-shadow:1px 3px 12px #bbb;
    box-shadow:1px 3px 12px #bbb;

    /* 一定要设置background, 不然 ie 会显示在字体上 */
    background: #fff;

    /* gte=ie8 */
    -ms-filter:&quot;progid:DXImageTransform.Microsoft.Glow(color=#aaaaaa,strength=3) progid:DXImageTransform.Microsoft.Shadow(color=#eeeeee,direction=0,strength=6) progid:DXImageTransform.Microsoft.Shadow(color=#dddddd,direction=90,strength=10) progid:DXImageTransform.Microsoft.Shadow(color=#dddddd,direction=180,strength=6) progid:DXImageTransform.Microsoft.Shadow(color=#eeeeee,direction=270,strength=6)&quot;;

    /* lte=ie7 */
    *filter:
    progid:DXImageTransform.Microsoft.Shadow(color=#eeeeee,direction=0,strength=7)
    progid:DXImageTransform.Microsoft.Shadow(color=#dddddd,direction=90,strength=10)
    progid:DXImageTransform.Microsoft.Shadow(color=#dddddd,direction=180,strength=10)
    progid:DXImageTransform.Microsoft.Shadow(color=#eeeeee,direction=270,strength=7);
}
:root .sl-shadow { filter:none\9; }  /* IE9 不使用滤镜 */
.sl-shadow a { position: relative; } /* 解决上文所说的 a:hover 问题 */
&lt;/pre&gt;


&lt;h3&gt;五，IE 下未安装 flash 引起页面的白屏等待状态&lt;/h3&gt;

&lt;p&gt;这里简单带过，在没有安装&lt;strong&gt;flash&lt;/strong&gt;的机器上运行有&lt;code class=&quot;v-code&quot;&gt;object&lt;/code&gt;的代码时，&lt;strong&gt;IE&lt;/strong&gt;里面会导致页面停留在加载&lt;strong&gt;flash&lt;/strong&gt;安装文件的进程上，直到浏览器下载完毕再渲染接下来的&lt;strong&gt;DOM&lt;/strong&gt;结构。&lt;/p&gt;

&lt;p&gt;经过排查，这样的情况会导致页面刷新白屏加载一段时间：&lt;/p&gt;

&lt;p&gt;1, 机器未安装&lt;strong&gt;flash&lt;/strong&gt;，页面有&lt;strong&gt;flash&lt;/strong&gt;相关代码&lt;/p&gt;

&lt;p&gt;2, &lt;code class=&quot;v-code&quot;&gt;object&lt;/code&gt; 代码与下一个&lt;strong&gt;DOM&lt;/strong&gt;结构之间存在&lt;code class=&quot;v-code&quot;&gt;script&lt;/code&gt;标签。&lt;/p&gt;

&lt;p&gt;初步原因分析：没有安装&lt;strong&gt;flash&lt;/strong&gt;的机器，渲染页面的时候，会请求&lt;strong&gt;flash&lt;/strong&gt;网站，发送回来安装文件。这时候在&lt;strong&gt;IE&lt;/strong&gt;下如果有&lt;code class=&quot;v-code&quot;&gt;script&lt;/code&gt;标签，浏览器可能会误认为这段脚本即将使用&lt;strong&gt;flash&lt;/strong&gt;，或者进行通讯。于是必须执行。这导致的结果就是必须得等安装文件加载好，才去渲染页面。就有白屏了。&lt;/p&gt;

&lt;p&gt;解决方法：将&lt;code class=&quot;v-code&quot;&gt;script&lt;/code&gt;标签包在&lt;code class=&quot;v-code&quot;&gt;div&lt;/code&gt;里面，或者移到最底端。&lt;/p&gt;

&lt;h2&gt;六、IE6 最小高度控制&lt;/h2&gt;

&lt;p&gt;我们在定义一个页面的时候，或许会给这个页面一个最小的高度，通常很简单&lt;code class=&quot;v-code&quot;&gt;min-height: 500px;&lt;/code&gt;，这样就可以解决很多浏览器。但是 IE6 不认这个。好吧，简单把代码贴下，定一个高度为 520px 的容器：&lt;/p&gt;

&lt;pre class=&quot;css&quot; name=&quot;colorcode&quot;&gt;
.sl-minheight {
    height: auto !important;
    _height: 520px;
    min-height: 520px;
    _overflow: visible;
}
&lt;/pre&gt;


&lt;h2&gt;七、其他&lt;/h2&gt;

&lt;p&gt;&lt;strong&gt;a&lt;/strong&gt; 链接的空路径，有时候在思考是使用 &lt;code class=&quot;v-code&quot;&gt;javascript:void(0);&lt;/code&gt;，还是&lt;code class=&quot;v-code&quot;&gt;javascript:;&lt;/code&gt;, 其实在有&lt;strong&gt;Iframe&lt;/strong&gt;的页面，这两种写法在&lt;strong&gt;IE6&lt;/strong&gt;下，触发事件都会阻塞页面的渲染进程的。所以使用&lt;code class=&quot;v-code&quot;&gt;#&lt;/code&gt;会更好。&lt;/p&gt;

&lt;p&gt;日后更多积累，再补充。(2012.06.12)&lt;/p&gt;
</description>
                <link>/2012/06/12/some-solution-for-ie-hack.html</link>
                <guid>/2012/06/12/some-solution-for-ie-hack</guid>
                <pubDate>2012-06-12T00:00:00+08:00</pubDate>
        </item>

>>>>>>> 32670a3220bc4ffea95ab4bd018a85957cb4792e

</channel>
</rss>
