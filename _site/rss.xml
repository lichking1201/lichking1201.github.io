<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
<channel>
        <title>Dragoon</title>
        <description>Dragoon - lichen</description>
        <link></link>
        <link></link>
        <lastBuildDate>2014-02-24T15:48:48+08:00</lastBuildDate>
        <pubDate>2014-02-24T15:48:48+08:00</pubDate>
        <ttl>1800</ttl>


        <item>
                <title>menu-aim.js分析</title>
                <description>&lt;h3&gt;0.楔子&lt;/h3&gt;

&lt;p&gt;开始分析前，先看两个现实的用户体验栗子：&lt;/p&gt;

&lt;p&gt;&lt;em&gt;反面教材：&lt;a href=&quot;http://www.zol.com/&quot; title=&quot;中关村商城&quot;&gt;中关村商城&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;设想一个场景，家里想买个新音箱,买之前避免被坑要做个调查吧，看看参数对比下价格。思来想去，还是中关村在线比较靠谱。于是打开中关村在线首页，在首屏的菜单导航中一项一项划过查看，诶，「电脑外设」下面有个「音箱」栏目，OK，就是他了！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resouse/img/2014-2-24-1.png&quot; alt=&quot;示例二&quot; /&gt;&lt;/p&gt;

&lt;p&gt;正如上图，确认了要指向的目标，相信正常人类&lt;strong&gt;第一反应&lt;/strong&gt;都会是沿绿色箭头移动鼠标的吧？但是！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resouse/img/2014-2-24-2.png&quot; alt=&quot;示例二&quot; /&gt;&lt;/p&gt;

&lt;p&gt;纳尼？！我的音箱呢？！怎么奇怪的东西弹出来了？！我要买的是音箱不是mp3mp4啊！好吧，鼠标回去再来次试试看，纳尼？！还是这样？！F**K，非要我用扭曲的红色路线不成？！摔！坑爹呢这用户体验！直接一点会死嘛会死吗？！&lt;/p&gt;

&lt;p&gt;&lt;em&gt;正面教材：&lt;a href=&quot;http://www.tmall.com/&quot; title=&quot;天猫商城&quot;&gt;天猫商城&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;正面教材就不多说了，请自行体会什么是智能的交互体验。&lt;/p&gt;

&lt;!--more--&gt;


&lt;h3&gt;1.menu-aim简介&lt;/h3&gt;

&lt;p&gt;言归正传，之所以前面两个例子有差异如此大的用户体验，其实就在于这个menu-aim.js上。
menu-aim 是一个应用于下拉菜单的jQuery插件。它的作用是识别用户鼠标划过菜单的意向并作出相应的处置。&lt;/p&gt;

&lt;p&gt;这类问题最早是依靠timeout或者delay延迟的方法来解决，设置一个时间阀值，鼠标划过时延迟触发来避免误触的情况。menu-aim在这一基础上做了更优的改进，加入了鼠标路径分析，通过读取鼠标位置，&lt;strong&gt;更准确的&lt;/strong&gt;判断用户意图。&lt;/p&gt;

&lt;h3&gt;2.原理分析&lt;/h3&gt;

&lt;p&gt;说穿了其实很简单，如下图所示：&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/resouse/img/2014-2-24-3.png&quot; alt=&quot;示例三&quot; /&gt;&lt;/p&gt;

&lt;p&gt;图中蓝色三角形左边顶点为鼠标移动前的最后位置，右侧顶点连线为与子菜单之间的边界。menu-aim计算当前鼠标位置，如果在蓝色区域内，说明用户的意图是划向子菜单，则不会触发鼠标移动时划过的其他菜单项。&lt;/p&gt;

&lt;h3&gt;3.核心代码&lt;/h3&gt;

&lt;pre&gt;
    //斜率公式
    function slope(a, b) {
        return (b.y - a.y) / (b.x - a.x);
    };
    
    var decreasingSlope = slope(loc, decreasingCorner),
        increasingSlope = slope(loc, increasingCorner),
        prevDecreasingSlope = slope(prevLoc, decreasingCorner)  ,
        prevIncreasingSlope = slope(prevLoc, increasingCorner);

        if (decreasingSlope &amp;lt; prevDecreasingSlope &amp;&amp;
            increasingSlope &gt; prevIncreasingSlope) {
            
        // Mouse is moving from previous location towards the
        // currently activated submenu. Delay before activating a
        // new menu row, because user may be moving into submenu.
        
        lastDelayLoc = loc;
        return DELAY;   
&lt;/pre&gt;


&lt;p&gt;分别计算当前（loc）和上一个（lastDelayLoc）鼠标位置与菜单两顶点间连线的斜率，判断当前点是否在上图蓝色三角形内。判断成功，延迟触发事件，该死的子菜单就不会到处乱窜了！&lt;/p&gt;

&lt;h3&gt;4.使用说明&lt;/h3&gt;

&lt;pre class=&quot;prettyprint lang-html&quot;&gt;
    @DOM
    &amp;lt;nav&gt;
        &amp;lt;ul class=&quot;menu&quot;&gt;
            &amp;lt;li&gt;
                &amp;lt;div&gt;主菜单项一&amp;lt;/div&gt;
                &amp;lt;div&gt;
                    &amp;lt;ul class=&quot;submenu&quot;&gt;
                        &amp;lt;li&gt;子菜单项目1&amp;lt;/li&gt;
                        &amp;lt;li&gt;子菜单项目2&amp;lt;/li&gt;
                        &amp;lt;li&gt;子菜单项目3&amp;lt;/li&gt;
                    &amp;lt;/ul&gt;
                &amp;lt;/div&gt;
            &amp;lt;/li&gt;
            &amp;lt;li&gt;
                &amp;lt;div&gt;主菜单项二&amp;lt;/div&gt;
                &amp;lt;div&gt;
                    &amp;lt;ul class=&quot;submenu&quot;&gt;
                        &amp;lt;li&gt;子菜单项目1&amp;lt;/li&gt;
                        &amp;lt;li&gt;子菜单项目2&amp;lt;/li&gt;
                        &amp;lt;li&gt;子菜单项目3&amp;lt;/li&gt;
                    &amp;lt;/ul&gt;
                &amp;lt;/div&gt;
            &amp;lt;/li&gt;
        &amp;lt;/ul&gt;
    &amp;lt;/nav&gt;
&lt;/pre&gt;


&lt;pre class=&quot;prettyprint lang-js&quot;&gt;   
    @Options
    rowSelector: &quot;&gt; li&quot;,        //要获取的主菜单选项元素
    submenuSelector: &quot;*&quot;,       //特殊子菜单元素声明
    submenuDirection: &quot;right&quot;,  //子菜单弹出方位，left, right, above,  below 四种可选
    tolerance: 75,              // y轴误差，数字越大，蓝色三角形右边的长度越大
    enter: $.noop,              //鼠标划入某项时触发的自定义事件
    exit: $.noop,               //鼠标划出某项时触发的自定义事件
    activate: $.noop,           //子菜单弹出动作
    deactivate: $.noop,         //子菜单收回动作
    exitMenu: $.noop            //移出菜单区域触发
    
    @Usage
    $(&quot;.menu&quot;).menuAim({
        activate: function(){...},
        deactivate: function(){...}
    });
&lt;/pre&gt;


&lt;h3&gt;5.其他&lt;/h3&gt;

&lt;p&gt;相关文章：&lt;a href=&quot;http://bjk5.com/post/44698559168/breaking-down-amazons-mega-dropdown&quot;&gt;http://bjk5.com/post/44698559168/breaking-down-amazons-mega-dropdown&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;原版下载链接：&lt;a href=&quot;https://github.com/kamens/jQuery-menu-aim&quot;&gt;https://github.com/kamens/jQuery-menu-aim&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;个人注释版Demo：&lt;a href=&quot;/resouse/attach/jQuery-menu-aim-master.rar&quot;&gt;为性能着想，jquery.menu-aim.js350行将$(document)修改为了具体的钩子元素。&lt;/a&gt;&lt;/p&gt;
</description>
                <link>/2014/02/24/menu-aim.html</link>
                <guid>/2014/02/24/menu-aim</guid>
                <pubDate>2014-02-24T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>东方永德前端开发规范</title>
                <description>&lt;h3&gt;关于本规范&lt;/h3&gt;

&lt;p&gt;本规范由前端开发工程师负责编写，服务器端工程师补充完善。&lt;/p&gt;

&lt;p&gt;由于项目的维护和二次开发可能是直接的或间接的团队合作，为提高团队协作效率, 便于后台人员添加功能及前端后期优化维护, 输出高质量的文档。所以该文档&lt;strong&gt;核心是一个较为松散但有据可循，首要目的是确保项目可维护性的前端规范&lt;/strong&gt;。&lt;/p&gt;

&lt;p&gt;好的可维护性，需要从四个方面下手：&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;代码的松耦合，高度模块化，将页面内的元素视为一个个模块，相互独立，尽量避免耦合过高的代码，从html,css,js三个层面都要考虑模块化。&lt;/li&gt;
&lt;li&gt;良好的注释与代码风格。&lt;/li&gt;
&lt;li&gt;结构、样式与行为（html,css,js）高度分离并语义化元素&lt;/li&gt;
&lt;li&gt;严格按照规范编写代码。&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;基本准则&lt;/h3&gt;

&lt;p&gt;符合web标准，语义化html，结构（Xhtml）、样式（CSS）、行为（JavaScript）完全分离，兼容性优良。页面性能方面，代码要求简洁明了有序，尽可能的减小服务器负载，保证最快的解析速度。&lt;/p&gt;

&lt;!--more--&gt;


&lt;h3&gt;静态页文档结构&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;/resouse/FPmodel.rar&quot;&gt;下载模板文件夹&lt;/a&gt;&lt;/p&gt;

&lt;pre&gt;
root/
    `--index.html           html模板页面
    |--psd                  存放静态页面原型图
    |--js                   脚本文件夹
        `--jquery.js        默认包含jquery1.8.3.min
        `--common.js        默认包含通用脚本文件
    |--skins                页面样式文件夹
        |--images           图标、背景图片文件夹
        |--ui               js组件样式
        `--basic.css        默认包含基础样式文件
        `--common.css       默认包含通用样式文件
        `--page.css         默认包含页面特有样式文件
    |--pic                  示例图片文件夹
&lt;/pre&gt;


&lt;h3&gt;命名规则&lt;/h3&gt;

&lt;p&gt;1.模块组件化，组件中的class或id名采用骆驼命名法和下划线相结合的方式，单词之间的分隔靠大写字母分开，从属关系靠下划线分隔。例如：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;ul class=&quot;testList&quot;&amp;gt;
    &amp;lt;li class=&quot;testList_firstItem&quot;&amp;gt;从属关系，命名使用下划线分隔&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;XXXXXXXXX&amp;lt;/li&amp;gt;
    &amp;lt;li&amp;gt;XXXXXXXXX&amp;lt;/li&amp;gt;
&amp;lt;/ul&amp;gt;
&lt;/pre&gt;


&lt;p&gt;2.命名清晰，不怕命名长，怕命名容易冲突，长命名可以保证不会产生冲突，所以css选择时可以尽量不使用子选择符，也能确保css优先级权重足够低，方便扩展时的覆盖操作。&lt;/p&gt;

&lt;p&gt;3.命名避免使用中文拼音，应该采用更简明有语义的英文单词进行组合。&lt;/p&gt;

&lt;p&gt;4.id用于标识模块或页面的某一个父容器区域，名称必须唯一，不要随意新建id。&lt;del&gt;可用命名可以参考 &lt;a href=&quot;&quot; title=&quot;常用命名与语义&quot;&gt;常用命名与语义&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;5.使用有意义的或通用的ID和class命名：ID和class的命名应反映该元素的功能或使用通用名称，而不要用抽象的晦涩的命名。反映元素的使用目的是首选；使用通用名称代表该元素不表特定意义，与其同级元素无异，通常是用于辅助命名；使用功能性或通用的名称可以更适用于文档或模版变化的情况。&lt;/p&gt;

&lt;h3&gt;HTML初始化&lt;/h3&gt;

&lt;p&gt;初始化HTML应包括一下几点，具体见模板index.html文件&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;DTD统一用&amp;lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;。&lt;/li&gt;
&lt;li&gt;编码使用UTF-8&lt;/li&gt;
&lt;li&gt;上线互联网产品至少应包括Keywords,description与title&lt;/li&gt;
&lt;/ol&gt;


&lt;h3&gt;HTML规则&lt;/h3&gt;

&lt;p&gt;1.标签语义化，确保在去css后具有良好的可读性&lt;/p&gt;

&lt;p&gt;2.应在保证弹性的基础上尽量减少嵌套层数结构清晰&lt;/p&gt;

&lt;p&gt;3.使用Tab缩进，根元素无缩进&lt;/p&gt;

&lt;p&gt;4.所有编码均遵循xhtml标准, 且所有标签必须闭合, 包括br (&amp;lt;br /&gt;), hr(&amp;lt;hr /&gt;)等；标签属性必须在引号内；所有特殊字符必须编码；所有图片必须包含alt属性；所有链接必需包含title属性。&lt;/p&gt;

&lt;p&gt;5.特殊符号使用转码，可参考 &lt;del&gt;&lt;a href=&quot;../resource/webTools/tools.php#d-htmlchar&quot;&gt;常见转义字符&lt;/a&gt; | &lt;a href=&quot;../resource/doc/转义字符.txt&quot;&gt;字符表下载&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;h3&gt;样式CSS&lt;/h3&gt;

&lt;p&gt;1.CSS分为三类，通用类、组件类和业务类。通用类包括reset和常用样式的basic.css，专人维护。组件类为js组件关联的样式，置于ui文件夹下；业务类为页面或站点特有样式。&lt;/p&gt;

&lt;p&gt;2.单个CSS文件避免过大（建议少于300行）&lt;/p&gt;

&lt;p&gt;3.所有内部、外联的css文件须放置在head中加载&lt;/p&gt;

&lt;p&gt;4.避免在CSS中使用expression&lt;/p&gt;

&lt;p&gt;5.绝对不要在CSS中使用*选择符&lt;/p&gt;

&lt;p&gt;6.层级(z-index)必须清晰明确，页面弹窗、气泡为最高级（最高级为999），不同弹窗气泡之间可在三位数之间调整；普通区块为10-90内10的倍数；区块展开、弹出为当前父层级上个位增加，禁止层级间盲目攀比。&lt;/p&gt;

&lt;p&gt;7。关于书写规则，暂不作特别严格规范。其他CSS的注意事项可以参考 &lt;del&gt;&lt;a href=&quot;#h1-2&quot;&gt;命名规则&lt;/a&gt; | &lt;a href=&quot;#&quot;&gt;常用HACK&lt;/a&gt; | &lt;a href=&quot;#&quot;&gt;其他&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;h3&gt;行为——Javascript&lt;/h3&gt;

&lt;p&gt;1.js分为通用组件库与业务组件，通用组件库由专人维护，并提供详细文档Demo。&lt;/p&gt;

&lt;p&gt;2.开源组件必须保留原作者完整版权信息，并保留官网或说明文档网址&lt;/p&gt;

&lt;p&gt;3.为避免JS冲突，必须控制全局变量数量。每段功能代码要使用匿名函数包裹，控制变量的作用域&lt;/p&gt;

&lt;p&gt;4.通过设置全局命名空间OYD = {} 完成各匿名函数间的通信&lt;/p&gt;

&lt;p&gt;5.模板文件引入jQuery时，不要使用$符号，用jQuery替代，避免冲突&lt;/p&gt;

&lt;p&gt;6.与HTML、CSS高度分离：不要在HTML标签内通过onClick等触发程序，应使用事件监听。不要在程序内设置CSS样式，应通过添加、删除、替换样式的class达到目的，并在注释中注明样式的class&lt;/p&gt;

&lt;p&gt;7.页面引入的JS文件，放置在页尾加载。&lt;/p&gt;

&lt;p&gt;8.书写习惯暂不做严格规范。严格缩进，代码结构清晰，注释完整即可。其他可参考&lt;del&gt;&lt;a href=&quot;#h1-2&quot;&gt;命名规则&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;h3&gt;图片规范&lt;/h3&gt;

&lt;p&gt;1.图片主要分为两类：作为背景、图标的样式图片；以及照片等内容图片。&lt;strong&gt;每张图片不得超过50KB&lt;/strong&gt;（2013年中国平均网速375KB/s）&lt;/p&gt;

&lt;p&gt;2.样式图片文件名须有意义&lt;/p&gt;

&lt;p&gt;3.严格区分做样式图片与内容图片。做为背景的图片采用Css sprite技术，放在一张大图里。Css sprite技术的优点是减少了http请求数，但使图片面性css的background-position耦合度增加了，增加了维护成本。如果图片有修改，不要删已添加的图片，在空白处新增修改后的图片，减小修改的风险。&lt;/p&gt;

&lt;p&gt;4.背景图避免使用过小的背景图片平铺。对渲染性能影响很大&lt;/p&gt;

&lt;p&gt;5.如果有半透明阴影，使用PNG24无法IE6中显示。除非特别必要，建议原型图中去除阴影并使用PNG8存储，针对IE6HACK&lt;/p&gt;

&lt;p&gt;6.页面通过&amp;lt;img src=&quot;&quot;/&gt;内容图片时，须为其设置尺寸，并以16:9或4:3为最佳&lt;/p&gt;

&lt;p&gt;7.因为背景图总是最后加载，所以作为logo,章节标题的样式图片，必须通过&amp;lt;img src=&quot;&quot;/&gt;导入而不得通过背景图方式。且必须设置文字语义，例如：&lt;/p&gt;

&lt;pre&gt;
&amp;lt;h1&gt;&amp;lt;img src=&quot;logo.png&quot; alt=&quot;东方永德公司&quot;/&gt;&amp;lt;/h1&gt;
&amp;lt;h2&gt;&amp;lt;img src=&quot;title.png&quot; alt=&quot;公司文化&quot;/&gt;&amp;lt;/h2&gt;
&lt;/pre&gt;


&lt;p&gt;8.页面图片过多时，使用lazyLoad组件延迟加载&lt;/p&gt;

&lt;p&gt;9.关于Web上常用的图片设计、格式等内容可参考&lt;del&gt; &lt;a href=&quot;../resource/doc/photo&amp;design.docx&quot;&gt;图片与设计（文档版）&lt;/a&gt; &lt;/del&gt;| &lt;a href=&quot;http://ued.taobao.org/blog/?p=3196&quot;&gt;Web版&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;兼容性与测试&lt;/h3&gt;

&lt;p&gt;1.浏览器兼容性
浏览器测试优先级：IE8、Chrome、IE9、IE7、IE6、Firefox。&lt;/p&gt;

&lt;p&gt;因360浏览器、搜狗浏览器、猎豹浏览器通过封装IE、Chrome内核实现，故兼容性不作特殊要求&lt;/p&gt;

&lt;blockquote&gt;
&lt;table&gt;
    &lt;thead&gt;
        &lt;tr&gt;
            &lt;th&gt;浏览器&lt;/th&gt;
            &lt;th&gt;浏览器占比例&lt;/th&gt;
            &lt;th&gt;支持标准&lt;/th&gt;
        &lt;/tr&gt;
    &lt;/thead&gt;
    &lt;tfoot&gt;
        &lt;tr&gt;
            &lt;td colspan=&quot;3&quot;&gt;
                &lt;hr&gt;
                &lt;code&gt;A级－交互和视觉完全符全设计的要求&lt;/code&gt;&lt;br /&gt;
                &lt;code&gt;B级－视觉上允许有所差异，但不破坏页面的整体效果&lt;/code&gt;&lt;br /&gt;
                &lt;code&gt;C级－可忽略设计上的细节，但不防碍使用&lt;/code&gt;
                &lt;hr&gt;
                &lt;span class=&quot;note&quot;&gt;数据来源：&lt;a href=&quot;http://tongji.baidu.com/data/browser&quot; title=&quot;2013年3季度浏览器份额&quot;&gt;2013年3季度浏览器份额&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;
                &lt;span class=&quot;text note&quot;&gt;&lt;a href=&quot;http://brow.data.cnzz.com/main.php?s=brow&amp;uv=0&amp;type=3&quot;&gt;CNZZ&lt;/a&gt;数据是按浏览器品牌区分而不是内核版本，如360等浏览器使用的依然是IE或Webkit内核，故采用百度统计数据&lt;/span&gt;
            &lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tfoot&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;IE8.0&lt;/td&gt;
            &lt;td&gt;33.46%&lt;/td&gt;
            &lt;td&gt;A&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;chrome&lt;/td&gt;
            &lt;td&gt;25.25%&lt;/td&gt;
            &lt;td&gt;A&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;IE6.0&lt;/td&gt;
            &lt;td&gt;10.92%&lt;/td&gt;
            &lt;td&gt;B&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;IE9.0&lt;/td&gt;
            &lt;td&gt;6.43%&lt;/td&gt;
            &lt;td&gt;A&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;IE7.0&lt;/td&gt;
            &lt;td&gt;2.97%&lt;/td&gt;
            &lt;td&gt;B&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;IE10.0&lt;/td&gt;
            &lt;td&gt;2.54%&lt;/td&gt;
            &lt;td&gt;B&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;Firefox&lt;/td&gt;
            &lt;td&gt;1.54%&lt;/td&gt;
            &lt;td&gt;C&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
            &lt;td&gt;其他&lt;/td&gt;
            &lt;td&gt;&lt;/td&gt;
            &lt;td&gt;C&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;
&lt;/blockquote&gt;


&lt;p&gt;2.分辨率兼容性：以1024X768分辨率为测试基准。无移动端要求的自适应页面，须通过800X600;1024X768;1280X800;1366X768;1440X900测试&lt;/p&gt;

&lt;h3&gt;其他测试与工具&lt;/h3&gt;

&lt;p&gt;1.浏览器兼容性：&lt;del&gt;&lt;a href=&quot;../resource/tools/install-ietester-v0.5.2.exe&quot; title=&quot;IETester&quot;&gt;IETester&lt;/a&gt; | &lt;a href=&quot;../resource/tools/install-debugbar-v7.2.exe&quot; title=&quot;IEDebugger&quot;&gt;IEDebugger&lt;/a&gt; &lt;/del&gt;&lt;/p&gt;

&lt;p&gt;2.分辨率兼容性：&lt;del&gt;&lt;a href=&quot;../resource/tools/分辨率test.rar&quot; title=&quot;分辨率test&quot;&gt;分辨率test&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;p&gt;3.&lt;a href=&quot;http://browsershots.org/&quot;&gt;浏览器兼容性检查&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;4.&lt;a href=&quot;http://validator.w3.org/&quot;&gt;W3C标准检查&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;5.页面性能检查：YSlow&lt;/p&gt;

&lt;p&gt;6.CSS格式检查（在线） &lt;a href=&quot;http://csslint.net/&quot;&gt;CSSLint&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;7.Javascript格式检查（在线） &lt;a href=&quot;http://www.jslint.com/&quot;&gt;JSLint&lt;/a&gt;&lt;/p&gt;

&lt;h3&gt;优化&lt;/h3&gt;

&lt;p&gt;1.CSS内部、外联样式置于页面顶端head标签内；script引入的js文件置于页面最低端&lt;/p&gt;

&lt;p&gt;2.严格限制图片的大小不超过50KB每张，以及图片数量&lt;/p&gt;

&lt;p&gt;3.禁用CSS Expressions&lt;/p&gt;

&lt;p&gt;4.尽可能合并压缩CSS、JS文件，减少HTTP请求数量。通过外链的形式加载，使其可被浏览器缓存&lt;/p&gt;

&lt;p&gt;5.延迟加载组件、内容、图片&lt;/p&gt;

&lt;p&gt;6.预加载如CSS sprites等图片&lt;/p&gt;

&lt;p&gt;7.优化工具：&lt;del&gt;&lt;a href=&quot;#&quot; title=&quot;前端工具箱&quot;&gt;前端工具箱&lt;/a&gt;&lt;/del&gt;&lt;/p&gt;

&lt;h3&gt;注释要求&lt;/h3&gt;

&lt;p&gt;一个项目涉及到多人协作开发，阅读调用公共组件或者他人代码是必不可少的，时间的紧迫性却让程序员没有办法写出详细的说明文档。那么，友善的注释就变得非常重要。&lt;strong&gt;请务必认真对待下面的注释规范，因为我们是一个团队&lt;/strong&gt;&lt;/p&gt;

&lt;h4&gt;HTML注释&lt;/h4&gt;

&lt;p&gt;为方便二次开发套程序，HTML各模块使用注释&amp;lt;!--模块XXX--&gt;分割，详细如下：&lt;/p&gt;

&lt;pre&gt;
    &amp;lt;!--模块A开始--&gt;
    &amp;lt;div id=&quot;modelA&quot;&gt;
        模块A代码...
    &amp;lt;/div&gt;
    &amp;lt;!--模块A结束--&gt;
&lt;/pre&gt;


&lt;h4&gt;CSS注释&lt;/h4&gt;

&lt;p&gt;为便于团队协作，CSS文件头部需要详细注释此文件用途，示例如下：&lt;/p&gt;

&lt;pre&gt;
/*
* 文件用途说明
* 作者
* 制作日期
*/
&lt;/pre&gt;


&lt;p&gt;若此CSS为内含多个模块样式，以注释区分，示例如下&lt;/p&gt;

&lt;pre&gt;
/*通用样式*/
.box{}
.detail{}
...

/*头部样式*/
.head{}
.logo{}
...
&lt;/pre&gt;


&lt;h4&gt;JS注释&lt;/h4&gt;

&lt;p&gt;为便于团队协作，js各组件须详细注明该组件用途，调用方法，依赖关系，示例如下：&lt;/p&gt;

&lt;pre&gt;
    /*
        Tabs切换 OYDtabs
        @DOM
            &amp;lt;div class=&quot;OYDtabs&quot;&gt;
                &amp;lt;ul&gt;
                    &amp;lt;li&gt;&amp;lt;a hrdf=&quot;#tabs1&quot;&gt;tabs1&amp;lt;/a&gt;&amp;lt;/li&gt;
                    &amp;lt;li&gt;&amp;lt;a hrdf=&quot;#tabs2&quot;&gt;tabs2&amp;lt;/a&gt;&amp;lt;/li&gt;
                    &amp;lt;li&gt;&amp;lt;a hrdf=&quot;#tabs3&quot;&gt;tabs3&amp;lt;/a&gt;&amp;lt;/li&gt;
                &amp;lt;/ul&gt;
                &amp;lt;div id=&quot;tabs1&quot;&gt;111&amp;lt;/div&gt;
                &amp;lt;div id=&quot;tabs2&quot;&gt;222&amp;lt;/div&gt;
                &amp;lt;div id=&quot;tabs3&quot;&gt;333&amp;lt;/div&gt;
            &amp;lt;/div&gt;
        @CSS
            #OYDsfq li a.OYDtabs-active{background:#7FD2FF;color:#fff}
        @Usage
            $(&#39;.OYDtabs&#39;).OYDtabs(options);
        @Options
            activeClass     :&#39;OYDsfq-active&#39;,   //tabs标题选中样式名
            showDiv         :&#39;&#39;,                //显示哪个div，默认为空，显示第一个
            overOrClick     :&#39;click&#39;,           //触发事件，可以有click、mouseover、dbclick
            animation       :false,             //是否开启动画效果
            speed           :&#39;normal&#39;           //渐隐渐现速度，&#39;slow&#39;,&#39;normal&#39;,&#39;fast&#39;，也可以用数值代替，比如2000表示2000毫秒
    */
&lt;/pre&gt;



</description>
                <link>/2014/02/13/oydFpRule.html</link>
                <guid>/2014/02/13/oydFpRule</guid>
                <pubDate>2014-02-13T00:00:00+08:00</pubDate>
        </item>

        <item>
                <title>卷首语</title>
                <description>&lt;p&gt;历时3天，终于依靠Jekyll在GitHub上成功搭建了第一个Web小窝，期望我能在忙碌的时候，将技术的总结，生活的感悟记录下来。&lt;/p&gt;

&lt;p&gt;这些积累，便是财富了&lt;/p&gt;
</description>
                <link>/2014/02/13/HelloWord.html</link>
                <guid>/2014/02/13/HelloWord</guid>
                <pubDate>2014-02-13T00:00:00+08:00</pubDate>
        </item>


</channel>
</rss>
